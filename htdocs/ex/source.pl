#!/usr/bin/perl

# simple, semi-secure source viewer

use lib '../lib';
use CGI;

my $cgi = new CGI;

$ENV{PATH} = '/bin:/usr/bin:/usr/sbin:/sbin';

my $base = "$ENV{DOCUMENT_ROOT}/ex";
my $perl = "/usr/local/bin/perl";

my $f = $cgi->param('f');
my $s = $cgi->param('s') || 'html';

sub _escapehtml ($) {
    my $h = shift;
    $h =~ s/&/&amp;/g;
    $h =~ s/</&lt;/g;
    $h =~ s/>/&gt;/g;
    $h =~ s/"/&quot;/g;
    return $h;
}

if (! $f) {
    print $cgi->header('text/plain'), "Either I fucked up, or you tried to fuck me.";
    warn "Attempt to read [undef]";
    exit;
} elsif ($f =~ /source\.pl/) {
    print $cgi->header('text/plain'), "Man, you're sneaky, huh?!";
    warn "Attempt to read source.pl";
    exit;
} elsif ($f !~ m#^\w+\.pl$#) {
    print $cgi->header('text/plain'), "That's not very polite.";
    warn "Attempt to read $f";
    exit;
} elsif ($s eq 'html') {
    $exe = join '/', $base, $f;
    die "Cannot execute $f: $!" unless $exe && -f $exe;

    $ENV{QUERY_STRING} = '';
    $ENV{REQUEST_METHOD} = 'GET';
    print $cgi->header(),  <<EOH;
<html>
<link rel="stylesheet" type="text/css" href="/layout/style.css" />
<title>HTML generated by $f</title>
<body>
<p class="label">HTML generated by $f</p>
The following is the HTML generated by $f. You can also
<a href="$ENV{SCRIPT_NAME}?f=$f&s=perl">view the Perl source</a>
to the script.
<hr><pre>
EOH

    my $og = delete $ENV{GATEWAY_INTERFACE};
    chomp(my $html = `$perl $exe`);
    $ENV{GATEWAY_INTERFACE} = $og;
    print _escapehtml($html);

} elsif ($s eq 'perl') {
    open(P, "<$base/$f") || die "Can't read $f: $!";
    my $perl = _escapehtml(join '', <P>);
    close P;
    print $cgi->header(), <<EOH, $perl;
<html>
<link rel="stylesheet" type="text/css" href="/layout/style.css" />
<title>Perl source to $f</title>
<body>
<p class="label">Perl source to $f</p>
The following is the Perl source to $f. You can also
<a href="$ENV{SCRIPT_NAME}?f=$f&s=html">view the HTML generated</a>
by the script.
<hr><pre>
EOH
} else {
    die "Unsupported source type $s";
}

